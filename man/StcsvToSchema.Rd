% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/StcsvToSchema.R
\name{StcsvToSchema}
\alias{StcsvToSchema}
\title{Build an object of class \linkS4class{StfwfSchema} from a csv file.}
\usage{
StcsvToSchema(csvname, sep = ";", header = TRUE, lang = "en", ...)
}
\arguments{
\item{csvname}{Name of the csv file containing the schema.}

\item{sep}{The separator between columns. Defaults to ';'.}

\item{header}{Does the first data line contain column names? Defaults to 
\code{TRUE}.}

\item{lang}{Character vector of length 1 indicating the language for the 
header in the csv file (English: en -- default). So far only English is 
supported.}

\item{...}{Extra arguments for \code{\link[data.table]{fread}}.}
}
\value{
Return an object of class \linkS4class{StfwfSchema}.
}
\description{
\code{StcsvToSchema} is a constructor of the class 
\linkS4class{StfwfSchema}.

This constructor reads a csv file containing partially or totally the schema 
of the fixed-width file to read. So far, only English names are supported. 
This file must contain the following columns:

\itemize{

   \item \code{variable}: the name of the variable.
   \item \code{width}: the number of positions which the values of each 
   variable occupies in the file.
   \item \code{initialPos}: initial position of the field which the values of
    this variable occupies in the file.
   \item \code{finalPos}: final position of the field which the values of 
   this variable occupies in the file.
   \item \code{type}: type of the variable. It must be either \code{log}, 
   \code{int},  \code{num} or \code{char}.
   \item \code{valueRegEx}: regular expression (\link{regex}) for the values 
   of each variable.
   \item \code{description}: textual description of the variable.

}

The file may have a header or not. In the latter case, the order of columns 
is assumed to be that of the list above. English only is supported so far.
}
\examples{
path <- system.file('extdata', package = 'fastReadfwf')
StcsvToSchema(file.path(path, 'SchemaSNHS_microdataWeb.csv'), header = TRUE)

}
