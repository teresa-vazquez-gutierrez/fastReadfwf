% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setTypes.R, R/setChar.R
\docType{methods}
\name{setTypes}
\alias{setTypes}
\alias{setTypes,data.frame,StfwfSchema-method}
\alias{setChar,data.frame-method}
\title{Set the types in the schema as class of each variable in data.}
\usage{
setTypes(data, StfwfSchema)

\S4method{setTypes}{data.frame,StfwfSchema}(data, StfwfSchema)

\S4method{setChar}{data.frame}(data)
}
\arguments{
\item{data}{It can be a \linkS4class{data.table} or a \link[tibble]{tibble}
with all its columns of class character.}

\item{StfwfSchema}{Object of class \linkS4class{StfwfSchema} with the schema
used to read the object \code{data}.}
}
\value{
Returns a \linkS4class{data.table} or a \link[tibble]{tibble}
with the content of \code{data} but with the columns set to the class corresponding
to the types in \linkS4class{StfwfSchema}.
}
\description{
\code{setTypes} Set the types in the \code{schema} as class of
each variable in \code{data}.
}
\examples{
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(file.path(path, 'SchemaSNHS.xlsx'), 'stSchema')

# For data.tables
data.DT.char <- fread_fwf(
     file.path(path, 'MicroDataSNHS.txt'), stSchema, validate = FALSE, convert = FALSE,
       outFormat = 'data.table', perl = TRUE)
data.DT.types <- setTypes(data.DT.char, stSchema)
head(data.DT.types)

# For tibbles
 data.tibble.char <- fread_fwf(
      file.path(path, 'MicroDataSNHS.txt'), stSchema, validate = FALSE, convert = FALSE,
       outFormat = 'tibble')
 data.tibble.types <- setTypes(data.tibble.char, stSchema)
 head(data.tibble.types)

}
\seealso{
\code{\link[fastReadfwf]{fread_fwf}}
}
