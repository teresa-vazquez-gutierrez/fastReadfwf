path <- system.file('extdata', package = 'fastReadfwf')
xlsxToSchema(file.path(path, 'SchemaSNHSb.xlsx'), 'stSchema', header = TRUE)->x; str(x)
stColNames <- c('variable', 'width', 'initialPos', 'finalPos', 'type', 'valueRegEx','description')
x[, stColNames]
str(x[, stColNames])
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
xlsxToSchema(file.path(path, 'SchemaSNHSb.xlsx'), 'stSchema', header = TRUE)->x; str(x)
path <- system.file('extdata', package = 'fastReadfwf')
xlsxToSchema(file.path(path, 'SchemaSNHSb.xlsx'), 'stSchema', header = TRUE)->x; str(x)
y <- x$initialPos
y
diff(y)
length(diff(y))
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
xlsxToSchema(file.path(path, 'SchemaSNHSb.xlsx'), 'stSchema', header = TRUE)->x; str(x)
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHS.csv'), header = TRUE)
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHSb.csv'), header = TRUE)->x; str(x)
devtools::load_all(".")
#' path <- system.file('extdata', package = 'fastReadfwf')
#' csvToSchema(file.path(path, 'SchemaSNHS.csv'), header = TRUE)
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHS.csv'), header = TRUE)
traceback()
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHS.csv'), header = TRUE)->x; str(x)
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHS.csv'), header = TRUE)->x; str(x)
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHS.csv'), header = TRUE)->x; str(x)
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHS.csv'), header = TRUE)->x; str(x)
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHS.csv'), header = TRUE)->x; str(x)
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHSb.csv'), header = TRUE)->x; str(x)
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHSb.csv'), header = TRUE)->x; str(x)
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHSb.csv'), header = TRUE)->x; str(x)
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHSb.csv'), header = TRUE)->x; str(x)
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHSb.csv'), header = TRUE)->x; str(x)
devtools::load_all(".")
path <- system.file('extdata', package = 'fastReadfwf')
csvToSchema(file.path(path, 'SchemaSNHS.csv'), header = TRUE)->x; str(x)
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
library(fastReadfwf)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
# For data.tables
data <- fread_fwf(
file.path(path, 'MicroDataSNHS.txt'), stSchema, outFormat = 'data.table', perl = TRUE)
validateValues(data, stSchema, perl = TRUE)
stSchema
getdf(stSchema)
getdf(stSchema)$varia
getdf(stSchema)[36,]
library(fastReadfwf)
getdf(stSchema)[36,]
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
getdf(stSchema)[36,]
data <- fread_fwf(
file.path(path, 'MicroDataSNHS.txt'), stSchema, outFormat = 'data.table', perl = TRUE)
validateValues(data, stSchema, perl = TRUE)
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
validateValues(data, stSchema, perl = TRUE)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
validateValues(data, stSchema, perl = TRUE)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
validateValues(data, stSchema, perl = TRUE)
getdf(stSchema)[36,]
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
library(fastReadfwf)
validateValues(data, stSchema, perl = TRUE)
library(fastReadfwf)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
validateValues(data, stSchema, perl = TRUE)
library(fastReadfwf)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
validateValues(data, stSchema, perl = TRUE)
library(fastReadfwf)
validateValues(data, stSchema, perl = TRUE)
library(fastReadfwf)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
validateValues(data, stSchema, perl = TRUE)
library(fastReadfwf)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
validateValues(data, stSchema, perl = TRUE)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
library(fastReadfwf)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
validateValues(data, stSchema, perl = TRUE)
regexpr('[ ]*', c('', '980'))
regexpr('[ ]*', c(' ', '980'))
library(fastReadfwf)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
validateValues(data, stSchema, perl = TRUE)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
library(fastReadfwf)
validateValues(data, stSchema, perl = TRUE)
library(fastReadfwf)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(
file.path(path, 'SchemaSNHS.xlsx'),
sheetname = 'stSchema')
validateValues(data, stSchema, perl = TRUE)
getwd(~)
getwd('~')
rm(list = ls())
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(openxlsx)
path <- system.file('extdata', package = 'fastReadfwf')
origSchema <- read.xlsx(file.path(path, 'SchemaSNHS.xlsx'),
sheet = 'DiseÃ±o de Registro C. Adulto',
colNames = TRUE)
str(origSchema)
stSchema <- read.xlsx(file.path(path, 'SchemaSNHS.xlsx'),
sheet = 'stSchema',
colNames = TRUE)
str(stSchema)
library(fastReadfwf)
stSchema <- xlsxToSchema(file.path(path, 'SchemaSNHS.xlsx'), 'stSchema')
system.time(
data.DT <- fread_fwf(file.path(path, 'MicroDataSNHS.txt'),
stSchema, outFormat = 'data.table', perl = TRUE)
)
str(data.DT)
library(fastReadfwf)
stSchema <- xlsxToSchema(file.path(path, 'SchemaSNHS.xlsx'), 'stSchema')
system.time(
data.tibble <- fread_fwf(file.path(path, 'MicroDataSNHS.txt'),
stSchema, outFormat = 'tibble')
)
data.tibble
validateValues(data.tibble, stSchema)
library(data.table)
as.data.table(data.tibble)
system.time(as.data.table(data.tibble))
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(fastReadfwf)
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- csvToSchema(file.path(path, 'SchemaSNHS.csv'), 'stSchema')
file.path(path, 'SchemaSNHS.csv')
stSchema <- csvToSchema(file.path(path, 'SchemaSNHS.csv'), 'stSchema')
traceback()
csvToSchema(file.path(path, 'SchemaSNHS.csv'), 'stSchema')
devtools::load_all(".")
csvToSchema(file.path(path, 'SchemaSNHS.csv'), 'stSchema')
csvToSchema(file.path(path, 'SchemaSNHS.csv'))
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
stSchema <- csvToSchema(file.path(path, 'SchemaSNHS.csv'), 'stSchema')
stSchema <- csvToSchema(file.path(path, 'SchemaSNHS.csv'))
# Get the slot df
getdf(stSchema)
getdf(stSchema)[]
devtools::load_all(".")
getdf(stSchema)[]
getdf(stSchema)
devtools::load_all(".")
getdf(stSchema)
head(getdf(stSchema))
library(fastReadfwf)
library(openxlsx)
xlsx.df <- data.frame(variable = paste0('var', 1:3),
width = c(10, 2, 4),
initialPos = NA,
finalPos = NA,
type = c('char', 'num', 'char'),
valueRegEx = NA,
description = '')
xlsx.df
?write.xlsx
library(fastReadfwf)
library(openxlsx)
xlsx.df <- data.frame(variable = paste0('var', 1:3),
width = c(10, 2, 4),
initialPos = NA,
finalPos = NA,
type = c('char', 'num', 'char'),
valueRegEx = '',
description = '')
write.xlsx(xlsx.df, 'exampleSchema.xlsx', sheetName = 'stSchema', colNames = TRUE)
stSchema <- xlsxToSchema('exampleSchema.xlsx', 'stSchema')
stSchema
devtools::load_all(".")
library(fastReadfwf)
library(openxlsx)
xlsx.df <- data.frame(variable = paste0('var', 1:3),
width = c(10, 2, 4),
initialPos = NA,
finalPos = NA,
type = c('char', 'num', 'char'),
valueRegEx = '',
description = '')
write.xlsx(xlsx.df, 'exampleSchema.xlsx', sheetName = 'stSchema', colNames = TRUE)
stSchema <- xlsxToSchema('exampleSchema.xlsx', 'stSchema')
stSchema
library(fastReadfwf)
ls()
rm(list = ls())
devtools::load_all(".")
library(data.table)
#> Warning: package 'data.table' was built under R version 3.5.3
stSchema <- xlsxToSchema(file.path(path, 'SchemaSNHS.xlsx'), 'stSchema')
system.time(
data.DT <- fread_fwf(file.path(path, 'MicroDataSNHS.txt'),
stSchema, outFormat = 'data.table', perl = TRUE)
)
path <- system.file('extdata', package = 'fastReadfwf')
library(data.table)
#> Warning: package 'data.table' was built under R version 3.5.3
stSchema <- xlsxToSchema(file.path(path, 'SchemaSNHS.xlsx'), 'stSchema')
system.time(
data.DT <- fread_fwf(file.path(path, 'MicroDataSNHS.txt'),
stSchema, outFormat = 'data.table', perl = TRUE)
)
data.DT
validateValues(data.DT)
validateValues(data.DT, stSchema)
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
library(fastReadfwf)
devtools::load_all(".")
df <- data.frame(variable = c('Turnover', 'Employees'),
length = c(9L, 3L),
initialPos = c(1, 10),
finalPos = c(9, 12),
type = rep('num', 2),
valueRegEx = c('[0-9]{0,9}', '[0-9]{0,3}'),
description = c('Turnover of the business unit',
'Number of employees of the business unit'),
stringsAsFactors = FALSE)
Schema <- new(Class = 'StfwfSchema')
setdf(Schema) <- df
devtools::load_all(".")
df <- data.frame(variable = c('Turnover', 'Employees'),
width = c(9L, 3L),
initialPos = c(1, 10),
finalPos = c(9, 12),
type = rep('num', 2),
valueRegEx = c('[0-9]{0,9}', '[0-9]{0,3}'),
description = c('Turnover of the business unit',
'Number of employees of the business unit'),
stringsAsFactors = FALSE)
Schema <- new(Class = 'StfwfSchema')
setdf(Schema) <- df
devtools::load_all(".")
library(fastReadfwf)
# A trivial example:
df <- data.frame(variable = c('Turnover', 'Employees'),
width = c(9L, 3L),
initialPos = c(1, 10),
finalPos = c(9, 12),
type = rep('num', 2),
valueRegEx = c('[0-9]{0,9}', '[0-9]{0,3}'),
description = c('Turnover of the business unit',
'Number of employees of the business unit'),
stringsAsFactors = FALSE)
Schema <- new(Class = 'StfwfSchema')
setdf(Schema) <- df
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
library(fastReadfwf)
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
library(fastReadfwf)
devtools::load_all(".")
sch <- xlsxToSchema('C:/Users/David/E54009.DisRegistro_V1.AA2019.ftp_adulto.xlsx', 'Schema')
cue_adulto <- fread_fwf('C:/Users/David/cue_adulto.txt', sch, 'data.table', perl = TRUE)
cue_adulto[1, 1:5]
fwrite_fwf(cue_adulto, 'C:/Users/David/cue_adulto_1.txt', sch)
devtools::load_all(".")
fwrite_fwf(cue_adulto, 'C:/Users/David/cue_adulto_1.txt', sch)
cue_adulto_1 <- fread_fwf('C:/Users/David/cue_adulto_1.txt', sch, 'data.table', perl = TRUE)
cue_adulto[1, 1:5]
cue_adulto_1[1, 1:5]
identical(cue_adulto, cue_adulto_1)
identical(cue_adulto[,1], cue_adulto_1[,1])
identical(cue_adulto[,2], cue_adulto_1[,2])
identical(cue_adulto$OBS2, cue_adulto_1$OBS2)
identical(cue_adulto[,3], cue_adulto_1[,3])
identical(cue_adulto[,4], cue_adulto_1[,4])
identical(cue_adulto[,5], cue_adulto_1[,5])
cue_adulto_1[1, 1:8]
identical(cue_adulto[,7], cue_adulto_1[,7])
fwrite_fwf(cue_adulto, 'C:/Users/David/cue_adulto_1.txt', sch, justify = 'left')
devtools::load_all(".")
fwrite_fwf(cue_adulto, 'C:/Users/David/cue_adulto_1.txt', sch, justify = 'left')
cue_adulto <- fread_fwf('C:/Users/David/cue_adulto.txt', sch, 'data.table', perl = TRUE)
cue_adulto[9]$OBS2
fwrite_fwf(cue_adulto, 'C:/Users/David/cue_adulto_1.txt', sch, justify = 'left')
cue_adulto_1 <- fread_fwf('C:/Users/David/cue_adulto_1.txt', sch, 'data.table', perl = TRUE)
cue_adulto_1[9]$OBS2
cue_adulto_1 <- fread_fwf('C:/Users/David/cue_adulto_1.txt', sch, 'data.table', perl = TRUE, encoding = 'UTF-8')
cue_adulto_1[9]$OBS2
cue_adulto_1 <- fread_fwf('C:/Users/David/cue_adulto_1.txt', sch, 'data.table', perl = TRUE)
fwrite_fwf(cue_adulto_1, 'C:/Users/David/cue_adulto_2.txt', sch, justify = 'left')
rm(list = ls())
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
# A trivial example:
df <- data.frame(variable = c('Turnover', 'Employees'),
width = c(9L, 3L),
initialPos = c(1, 10),
finalPos = c(9, 12),
type = rep('num', 2),
valueRegEx = c('[0-9]{0,9}', '[0-9]{0,3}'),
description = c('Turnover of the business unit',
'Number of employees of the business unit'),
stringsAsFactors = FALSE)
Schema <- new(Class = 'StfwfSchema')
Schema[df$variable == 'Turnover']
devtools::load_all(".")
Schema[df$variable == 'Turnover']
devtools::load_all(".")
Schema[df$variable == 'Turnover']->x
x
Schema
df <- data.frame(variable = c('Turnover', 'Employees'),
width = c(9L, 3L),
initialPos = c(1, 10),
finalPos = c(9, 12),
type = rep('num', 2),
valueRegEx = c('[0-9]{0,9}', '[0-9]{0,3}'),
description = c('Turnover of the business unit',
'Number of employees of the business unit'),
stringsAsFactors = FALSE)
Schema <- new(Class = 'StfwfSchema', df)
Schema <- new(Class = 'StfwfSchema', df = df)
Schema
Schema[df$variable == 'Turnover']
devtools::load_all(".")
Schema[df$variable == 'Turnover']
devtools::load_all(".")
Schema[df$variable == 'Turnover']
devtools::load_all(".")
Schema[df$variable == 'Turnover']
Schema[df$variable == 'Turnover',]
devtools::load_all(".")
Schema[df$variable == 'Turnover',]
Schema[df$variable == 'Turnover',]->x
str(x)
devtools::load_all(".")
Schema[df$variable == 'Turnover',]->x
x
devtools::load_all(".")
x
Schema[1,]->x
Schema[1,]
Schema@df[1,]
devtools::load_all(".")
Schema@df[1,]
Schema@df[df$variable == 'Turnover',]
devtools::load_all(".")
Schema@df[df$variable == 'Turnover',]
Schema@df[1,]
Schema@df[1, initialPos]
Schema@df[1, 'initialPos']
Schema@df[df$variable == 'Turnover', 'initialPos']
Schema@df[df$variable == 'Turnover', 'finalPos']
Schema[1, 'valueRegEx']
devtools::load_all(".")
Schema[1, 'valueRegEx']
devtools::load_all(".")
Schema[1, 'valueRegEx']->x
str(x)
names(x)
vector(mode = 'character', length = length(names(x)))
devtools::load_all(".")
Schema[1, 'valueRegEx']->x
x
Schema[1,]->x
Schema[1,]
devtools::load_all(".")
Schema[1,]
Schema@df[1,]
devtools::load_all(".")
Schema@df[1,]
Schema@df[1, 'initialPos']
Schema[1, 'valueRegEx']->x
Schema[1, 'valueRegEx']
devtools::load_all(".")
Schema[1, 'variable']
Schema[1, 'initialPos']
Schema[2, 'initialPos']
Schema[, 'initialPos']
Schema[variable == 'Turnover', 'initialPos']
rm(df)
Schema[variable == 'Turnover', ]
knitr::opts_chunk$set(
collapse = TRUE,
cache = FALSE,
comment = "#>"
)
system.file('extdata', package = 'fastReadfwf')
system.file('data', package = 'fastReadfwf')
library(openxlsx)
path <- system.file('data', package = 'fastReadfwf')
origSchema <- read.xlsx(file.path(path, 'SchemaSNHS.xlsx'),
sheet = 'DiseÃ±o de Registro C. Adulto',
colNames = TRUE)
system.file('data', package = 'fastReadfwf')
devtools::load_all(".")
install.packages('tibble')
install.packages("tibble")
devtools::load_all(".")
devtools::document(".")
knitr::opts_chunk$set(
collapse = TRUE,
cache = FALSE,
comment = "#>"
)
file.path(path, 'SchemaSNHS.xlsx')
system.file('data', package = 'fastReadfwf')
library(openxlsx)
path <- system.file('data', package = 'fastReadfwf')
origSchema <- read.xlsx(file.path(path, 'SchemaSNHS.xlsx'),
sheet = 'DiseÃ±o de Registro C. Adulto',
colNames = TRUE)
path <- system.file('data', package = 'fastReadfwf')
path
file.path(path, 'SchemaSNHS.xlsx')
origSchema <- read.xlsx(file.path(path, 'SchemaSNHS.xlsx'),
sheet = 'DiseÃ±o de Registro C. Adulto',
colNames = TRUE)
path <- system.file('extdata', package = 'fastReadfwf')
read.xlsx(file.path(path, 'SchemaSNHS.xlsx'),
sheet = 'DiseÃ±o de Registro C. Adulto',
colNames = TRUE)
origSchema <- read.xlsx(file.path(path, 'SchemaSNHS.xlsx'),
sheet = 'DiseÃ±o de Registro C. Adulto',
colNames = TRUE)
origSchema
library(fastReadfwf)
devtools::load_all(".")
?fastRead_fwf
??fastRead_fwf
library(fastReadfwf)
